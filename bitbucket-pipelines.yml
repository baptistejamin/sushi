# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: ubuntu:bionic

pipelines:
  default:
    - step:
        script:
          # Print the Linux version.
          #- echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
          - export TERM=linux
          - echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
          - uname -a
          # Print the gcc version.
          - apt-get update -y
          - apt install build-essential -y
          - gcc --version
          - apt-get install -y -q libjack-jackd2-dev liblo-dev python2.7-dev
          - apt-get install -y -q libsndfile1-dev libasound2-dev
          - apt-get install -y -q git
          - apt-get install -y -q cmake
          - cmake --version
          - apt-get install -y software-properties-common
          - add-apt-repository -y ppa:ubuntu-toolchain-r/test
          - apt-get update -y
          - apt install gcc-8 g++-8 -y -q
          - update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 90 --slave /usr/bin/g++ g++ /usr/bin/g++-8 --slave /usr/bin/gcov gcov /usr/bin/gcov-8
          - gcc --version
          - git submodule update --init
          - mkdir build
          - cd build
          - echo "Trying to build"
          # Call the CMake.
          - cmake .. -DWITH_XENOMAI=FALSE -DWITH_JACK=TRUE -DWITH_VST2=FALSE -DWITH_VST3=FALSE -DWITH_LV2=FALSE -DWITH_LV2_MDA_TESTS=FALSE -DWITH_LINK=FALSE -DWITH_RPC_INTERFACE=FALSE -DTWINE_WITH_XENOMAI=FALSE
          # Build the project.
          - make -j 4
