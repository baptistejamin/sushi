# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: ubuntu:20.10

options:
  docker: true

pipelines:
  default:
    - step:
        name: Setup dependecies
        caches:
          - docker
        artifacts:
          - ./sushi/**
        script:
          # Print the Linux version.
          #- echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
          - export TERM=linux
          - echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
          - uname -a
          # Print the gcc version.
          - apt-get update -y
          - apt install build-essential -y
          - gcc --version
          - apt-get install -y -q libjack-jackd2-dev liblo-dev 
          - apt-get install -y -q libsndfile1-dev libasound2-dev
          - apt-get install -y -q cmake git
          - apt-get install -y -q libgrpc++-dev protobuf-compiler-grpc
          - apt-get install -y -q liblilv-dev lilv-utils lv2-dev lv2-examples mda-lv2
          - export LV2_PATH=$HOME/.lv2:/usr/local/lib/lv2:/usr/lib/lv2
          - apt-get install -y software-properties-common
          - add-apt-repository -y ppa:ubuntu-toolchain-r/test
          - cmake --version
          - gcc-10 --version
          - git submodule update --init
          - cd third-party/link
          - git submodule update --init
          - cd ../vst3sdk/
          - git submodule update --init
          - cd ../.. 
          # Set test data dir (for running unit test manually)
          - export SUSHI_TEST_DATA_DIR=$PWD/test/data
          - mkdir build
          - cd build
          - cmake .. -DWITH_XENOMAI=FALSE -DWITH_JACK=TRUE -DWITH_VST2=OFF -DWITH_LV2=ON -DWITH_LV2_MDA_TESTS=ON -DTWINE_WITH_XENOMAI=OFF
    
    - parallel:
      - step:
          name: Build sushi with otions enabled
          caches:
            - docker
          script:
            - cd build
            - make sushi
      - step:
          name: Build unit tests
          caches:
            - docker
          script:
            - cd build
            - make unit_tests
            - cd test
            # Run unit tests with some tests test disabled
            - ./unit_tests --gtest_filter=-TestAudioGraph.TestMultiCoreOperation:TestLv2Wrapper.TestSynchronousStateAndWorkerThreads:TestLv2Wrapper.TestSynchronousStateAndWorkerThreads

    - step:
        name: Build with minimal options
        script:
          - cd build
          - rm -rf ./*
          - cmake .. -DWITH_XENOMAI=OFF -DWITH_JACK=TRUE -DWITH_VST2=OFF -DWITH_VST3=OFF -DWITH_LV2=OFF -DWITH_LV2_MDA_TESTS=OFF -DTWINE_WITH_XENOMAI=OFF

    - parallel:
          - step:
              name: Build sushi 
              script:
                - cd build
                - make sushi
          - step:
              name: Build unit tests
              script:
                - cd build
                - make unit_tests
                - cd test
                # Run unit tests with some tests test disabled
                - ./unit_tests --gtest_filter=-TestAudioGraph.TestMultiCoreOperation:TestLv2Wrapper.TestSynchronousStateAndWorkerThreads:TestLv2Wrapper.TestSynchronousStateAndWorkerThreads




